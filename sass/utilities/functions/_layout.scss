// ==========================================================================
// Functions - Layout
// ==========================================================================



/// Calculate the percentage width of a given element
/// @link http://www.sitepoint.com/8-tips-help-get-best-sass/
/// @param {Number} $col-span - number of desired columns
/// @return {Percent} column width
/// @example sass
///   .col-span-2
///     width: calculate-width(2) // width = 50%

@function calculate-width($col-span) {
  @return 100% / $col-span
}


/// Map pre-defined z-index values
/// @link http://www.sitepoint.com/better-solution-managing-z-index-sass/
/// @param {Number} $layer - mapper value
/// @param {Array} $zindex - mapper key
/// @example sass
///   .modal
///     z-index: z(modal) // z-index = 9000

@function z($layer) {

  @if not map-has-key($zindex, $layer) {
    @warn "No layer found for `#{$layer}` in $zindex map. Property omitted."
  }

  @return map-get($zindex, $layer)

}


/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}


/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}

@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}
